<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xgh.sportsite.dao.read.IRecommendDaoR">

	<!--ʵ��ӳ��-->
	<resultMap id="recommendMap" type="com.xgh.sportsite.entity.Recommend">
		<!--主键id-->
		<id property="id" column="id" javaType="Long" />
		<!--会员id-->
		<result property="memberId" column="member_id" javaType="long" jdbcType="BIGINT" />
		<!--类型（1：创意  2：挑毛病  3：吐槽）-->
		<result property="kind" column="kind" javaType="int" jdbcType="INTEGER" />
		<!--内容-->
		<result property="context" column="context" javaType="String" jdbcType="VARCHAR" />
		<!--回复-->
		<result property="remart" column="remart" javaType="String" jdbcType="VARCHAR" />
		<!--状态（-1：已删除  0：正常  1：未删除）-->
		<result property="status" column="status" javaType="int" jdbcType="INTEGER" />
		<!--创建时间-->
		<result property="createDate" column="create_date" javaType="Date" jdbcType="TIMESTAMP" />
		<!--修改时间-->
		<result property="updateDate" column="update_date" javaType="Date" jdbcType="TIMESTAMP" />
		<!--是否采纳（0：未采纳  1：已采纳）-->
		<result property="abopt" column="abopt" javaType="int" jdbcType="INTEGER" />
		<!--备用字段1-->
		<result property="data1" column="data_1" javaType="String" jdbcType="VARCHAR" />
		<!--备用字段2-->
		<result property="data2" column="data_2" javaType="long" jdbcType="BIGINT" />
		<!--备用字段3-->
		<result property="data3" column="data_3" javaType="int" jdbcType="INTEGER" />
		<!--备用字段4-->
		<result property="data4" column="data_4" javaType="Double" jdbcType="DOUBLE" />
	</resultMap>


	<sql id="Base_Column_List">
		 id,	member_id,	kind,	context,	remart,	status,	create_date,	update_date,	abopt,	data_1,	data_2,	data_3,	data_4
	</sql>

	<select id="get" resultMap="recommendMap" parameterType="java.lang.Long">
		 SELECT
		 <include refid="Base_Column_List" />
		 FROM tb_recommend
		 WHERE id = #{id}
	</select>

	<!--获取创意吐槽毛病列表-->
	<select id="getRecommendList" parameterType="hashmap" resultType="hashmap">
		SELECT
		t.id,
		t.member_id AS memberId,
		t.kind,
		t.context,
		t.remart AS remark,
		t.abopt,
		t.create_date as createDate,
		IFNULL(m.nick_name,'')AS nickName
		FROM
		tb_recommend t LEFT JOIN tb_member_user m
		ON
		t.member_id=m.id
		WHERE
		t.`status` = 1
		AND t.kind = #{kind}
		<if test="kind==1">
			AND t.member_id = #{memberId}
		</if>
		ORDER BY t.create_date DESC
		limit ${(page-1)*pageSize},${pageSize};
	</select>

	<select id="getRows" parameterType="hashmap"  resultType="long">
		select
		count(*) from
		tb_recommend
		<if test="keyGoods!= null">
			<trim prefix="WHERE" prefixOverrides="AND |OR ">
				<if test="id!= null and id!=''">
					and id = #{id}
				</if>
			</trim>
		</if>
	</select>

</mapper>